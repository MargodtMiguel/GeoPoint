// <auto-generated />
using System;
using GeoPoint.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeoPoint.Models.Migrations
{
    [DbContext(typeof(GeoPointAPIContext))]
    [Migration("20181027155422_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GeoPoint.Models.tblFriends", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FriendId");

                    b.Property<string>("UserId");

                    b.Property<bool>("isPending");

                    b.HasKey("Id");

                    b.ToTable("Friends");

                    b.HasData(
                        new { Id = "973a5570-eb9c-4506-9bd3-32373a23a6fe", FriendId = "1025c6a2-5b02-425e-b17a-ad59be26ece7", UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451", isPending = false },
                        new { Id = "c13cb356-8553-4fbe-8ada-52b6050ad347", FriendId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b", UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451", isPending = true },
                        new { Id = "c99ac9a6-1b72-47ad-b91a-d62db2a9c71e", FriendId = "5e780f46-64a3-4b03-b3c4-2839711f9451", UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7", isPending = false },
                        new { Id = "9a5c6a4c-bad5-4cf6-bc74-2aa8156ed2f7", FriendId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b", UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7", isPending = true }
                    );
                });

            modelBuilder.Entity("GeoPoint.Models.tblScores", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Map");

                    b.Property<int>("Score");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Scores");

                    b.HasData(
                        new { Id = "fba5a66c-da4a-479d-aba9-634ff1c49d5b", Map = "EU", Score = 8, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 287, DateTimeKind.Local), UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451" },
                        new { Id = "bd1ce265-6703-4985-967b-1021bfb48728", Map = "EU", Score = 4, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7" },
                        new { Id = "8c9f1b31-ea99-47e0-82c1-886fbd9d915d", Map = "EU", Score = 10, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b" },
                        new { Id = "69f59a9f-a906-42db-9c51-9f5cda834092", Map = "NA", Score = 5, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451" },
                        new { Id = "3323c0c9-dd3a-43fa-a1e5-b3379770de4b", Map = "NA", Score = 14, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7" },
                        new { Id = "1f80d95c-d77d-4790-b62d-30b8204e81bc", Map = "NA", Score = 8, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b" },
                        new { Id = "258c583f-6005-49d6-8c3e-0d85bf944175", Map = "AF", Score = 7, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451" },
                        new { Id = "d1ca6ba3-899b-4c83-89fb-847ef6bd63ad", Map = "AF", Score = 6, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7" },
                        new { Id = "3ec59051-bdfd-42ce-a7d5-1826da3e6519", Map = "AF", Score = 6, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b" },
                        new { Id = "d93b1e5a-cd05-45f6-958e-35fb2ce8394e", Map = "ZA", Score = 3, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "5e780f46-64a3-4b03-b3c4-2839711f9451" },
                        new { Id = "2935d37a-6dce-4223-a954-3a2a3d5b41fc", Map = "ZA", Score = 5, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "1025c6a2-5b02-425e-b17a-ad59be26ece7" },
                        new { Id = "755f79d9-9d53-4af3-bbd8-5658c407e4fc", Map = "ZA", Score = 7, TimeStamp = new DateTime(2018, 10, 27, 17, 54, 22, 289, DateTimeKind.Local), UserId = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b" }
                    );
                });

            modelBuilder.Entity("GeoPoint.Models.tblUsers", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = "5e780f46-64a3-4b03-b3c4-2839711f9451", AccessFailedCount = 0, ConcurrencyStamp = "fb0bbc71-a159-4669-9ed0-760f96520c86", EmailConfirmed = false, IsAdmin = true, LockoutEnabled = false, PasswordHash = "rune", PhoneNumberConfirmed = false, TwoFactorEnabled = false, UserName = "RuneClaeys" },
                        new { Id = "1025c6a2-5b02-425e-b17a-ad59be26ece7", AccessFailedCount = 0, ConcurrencyStamp = "9856ecda-604a-44c8-afce-0e3b203f58fa", EmailConfirmed = false, IsAdmin = true, LockoutEnabled = false, PasswordHash = "miguel", PhoneNumberConfirmed = false, TwoFactorEnabled = false, UserName = "MiguelMargodt" },
                        new { Id = "6fb0905f-0a90-4f08-85a8-b13e8d956c4b", AccessFailedCount = 0, ConcurrencyStamp = "39c4eda7-62ad-4900-a859-28bee78db2a9", EmailConfirmed = false, IsAdmin = false, LockoutEnabled = false, PasswordHash = "bram", PhoneNumberConfirmed = false, TwoFactorEnabled = false, UserName = "BramVuylseke" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
